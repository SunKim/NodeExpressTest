<!DOCTYPE html>
<html>
<head>
	<meta charset="utf-8">
	<title> <%= title %> </title>
	<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
	
	<style>
		.chatLogs { margin-top:20px; }
		.chatlog_join { margin:4px; padding:8px; border-radius:8px; border:1px solid grey; }
		.chatlog_self { margin:4px; padding:8px; border-radius:8px; background:#f4e242; }
		.chatlog_other { margin:4px; padding:8px; }
	</style>
</head>
<body>
	<div class="container">
		<h3> <%= title %> powered by AWS free tier</h3>
		<h4> Random User Name : <span id="span_username"></span></h4>
		
		<p class="bg-success" style="padding:14px;margin:30 0px;">창을 2개 이상 띄워서 사용</p>
		
		<form class="form-inline">
			<div class="form-group">
				<label for="msgForm">Message: </label>
				<input type="text" class="form-control" id="msgForm">
			</div>
			<button type="submit" class="btn btn-primary">Send</button>
			<button type="button" class="btn btn-warning" style="display:inline;" id="btnSendInfo">Send Info</button>
		</form>

		<div id="chatLogs"></div>
	</div>
	
	<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.2.4/jquery.min.js"></script>
	<script src="/socket.io/socket.io.js"></script>
	<script>
	$(function(){
		// socket.io 서버에 접속한다
		var socket = io();
		var username = makeRandomName();
		var userid = 'sjmarine97@gmail.com';
		
		$('#span_username').text(username);

		// 서버로 자신의 정보를 전송한다.
		socket.emit('login', {
			// name: 'Sun Kim',
			name: username,
			userid: userid
		});

		//서버로부터의 메시지 수신
		socket.on('login', function(data) {
			$('#chatLogs').append('<div class="chatlog_join"><strong>' + data + '</strong> has joined</div>');
		});

		//서버로부터의 메시지 수신
		socket.on('chat', function(data) {
			//alert('chat. msg : ' + data.msg + ' (' + data.from.name + ')');
			
			if (data.from.name == username) {
				$('#chatLogs').append('<div class="chatlog_self"><strong>' + data.from.name + '</strong> : ' + data.msg + '</div>');
			} else {
				$('#chatLogs').append('<div class="chatlog_other"><strong>' + data.from.name + '</strong> : ' + data.msg + '</div>');
			}
			
		});

		//서버로부터의 메시지 수신
		socket.on('senInfo', function(data) {
			$('#chatLogs').append('<p class="bg-success">Info received from : ' + data.from.name + '</p>');
		});
		
		//서버로부터의 메시지 수신
		socket.on('sendInfo', function(data) {
			$('#chatLogs').append('<p class="bg-success">Info received from : ' + data.from.name + '</p>');
			//$('#chatLogs').append('<p class="bg-success">Info received</p>');
		});

		// Send 버튼이 클릭되면
		$('form').submit(function(e) {
			e.preventDefault();
			var $msgForm = $('#msgForm');

			// 서버로 메시지를 전송한다.
			socket.emit('chat', { msg: $msgForm.val() });
			$msgForm.val('');
		});

		//btnSendInfo 버튼 클릭시
		$('#btnSendInfo').click(function(e) {
			socket.emit('sendInfo', {});
		});

		function makeRandomName(){
			var name = '';
			var possible = 'abcdefghijklmnopqrstuvwxyz';
			for( var i = 0; i < 5; i++ ) {
				name += possible.charAt(Math.floor(Math.random() * possible.length));
			}
			return name;
		}
		
		$('#msgForm').focus();
	});
	</script>
</body>
</html>